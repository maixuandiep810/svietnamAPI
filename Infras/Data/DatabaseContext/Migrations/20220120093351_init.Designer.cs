// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using svietnamAPI.Infras.Data.DatabaseContext;

namespace svietnamAPI.Infras.Data.DatabaseContext.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220120093351_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Auth.AddressBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("Varchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Auth_AddressBooks");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("HashedPassword")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("Salt")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("EntityStatusId");

                    b.ToTable("Auth_Users");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.GlobalProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int?>("BaseImageId")
                        .HasColumnType("int");

                    b.Property<int>("ChildrenCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaf")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRoot")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsCount")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int?>("ThumbnailImageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("BaseImageId");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ThumbnailImageId");

                    b.ToTable("Catalog_GlobalProductCategories");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("AddressId");

                    b.HasIndex("EntityStatusId");

                    b.ToTable("Catalog_Manufacturers");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int>("CountryOfOriginId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemsCount")
                        .HasColumnType("int");

                    b.Property<int>("LeafCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("Varchar(1000)");

                    b.Property<string>("SKU")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<string>("Slug")
                        .HasMaxLength(1000)
                        .HasColumnType("Varchar(1000)");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("CountryOfOriginId");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("LeafCategoryId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Catalog_Products");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.ProductItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxQtyAllowedInShoppingCart")
                        .HasColumnType("int");

                    b.Property<int>("MinQtyAllowedInShoppingCart")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("Varchar(1000)");

                    b.Property<int>("NotifyForQuantityBelow")
                        .HasColumnType("int");

                    b.Property<int>("OutOfStockThreshold")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductItemPrice")
                        .HasColumnType("Decimal(19,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(1000)
                        .HasColumnType("Varchar(1000)");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("ProductId");

                    b.ToTable("Catalog_ProductItems");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.ProductItemDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("EavAttributeValueId")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EavAttributeValueId");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("Catalog_ProductItemDetails");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("AddressId");

                    b.HasIndex("EntityStatusId");

                    b.ToTable("Catalog_Suppliers");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<int?>("CommuneId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("ZipCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)")
                        .HasDefaultValue("False");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("CommuneId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Core_Addresses");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Commune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("Varchar(3000)");

                    b.Property<string>("Slug")
                        .HasMaxLength(3000)
                        .HasColumnType("Varchar(3000)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("DistrictId");

                    b.ToTable("Core_Communes");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Core_Countries");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.DataType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BackendName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Core_DataTypeConsts");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Core_Districts");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Desciption")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("Varchar(1000)");

                    b.Property<string>("Slug")
                        .HasMaxLength(1000)
                        .HasColumnType("Varchar(1000)");

                    b.Property<string>("Title")
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("EntityStatusId");

                    b.ToTable("Core_Documents");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Extension")
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("MimeType")
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Core_DocumentTypeConsts");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<int>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("Varchar(3000)");

                    b.Property<string>("Slug")
                        .HasMaxLength(3000)
                        .HasColumnType("Varchar(3000)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("EntityTypeId");

                    b.ToTable("Core_EntityStatusConsts");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsEavEntity")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Core_EntityTypeConsts");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("CountryId");

                    b.ToTable("Core_Provinces");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("DataTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<int>("EavAttributeGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("EavAttributeGroupId1")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<int>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("DataTypeId");

                    b.HasIndex("EavAttributeGroupId");

                    b.HasIndex("EavAttributeGroupId1");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("EntityTypeId");

                    b.ToTable("Eav_EavAttributes");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeEavAttributeSetMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int>("EavAttributeId")
                        .HasColumnType("int");

                    b.Property<int>("EavAttributeSetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EavAttributeId");

                    b.HasIndex("EavAttributeSetId");

                    b.ToTable("Eav_EavAttributeEavAttributeSetMappings");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Eav_EavAttributeGroupConsts");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Eav_EavAttributeSets");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("EavAttributeId")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("ValueToString")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.HasKey("Id");

                    b.HasIndex("EavAttributeId");

                    b.HasIndex("EntityStatusId");

                    b.ToTable("Eav_EavAttributeValues");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Logistics.ShippingTableRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int?>("CommuneId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<int?>("DistricId")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinOrderSubTotal")
                        .HasColumnType("Decimal(19,2)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<decimal>("ShippingPrice")
                        .HasColumnType("Decimal(19,2)");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommuneId");

                    b.HasIndex("DistricId");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("StoreId");

                    b.ToTable("Logistics_ShippingTableRates");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int>("BillingAddressingId")
                        .HasColumnType("int");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRoot")
                        .HasColumnType("bit");

                    b.Property<string>("OrderNote")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("Decimal(19,2)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("int");

                    b.Property<decimal>("ShippingPrice")
                        .HasColumnType("Decimal(19,2)");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("Decimal(19,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressingId");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("StoreId");

                    b.ToTable("OnlineOrders_Orders");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("OrderItemNote")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<int>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductItemPrice")
                        .HasColumnType("Decimal(19,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("OnlineOrders_OrderItems");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ShippingAddressId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartNote")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("StoreId");

                    b.ToTable("OnlineOrders_ShoppingCarts");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartItemNote")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("OnlineOrders_ShoppingCartItems");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("Nvarchar(1000)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("Varchar(1000)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("Slug")
                        .HasMaxLength(1000)
                        .HasColumnType("Varchar(1000)");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("AddressId");

                    b.HasIndex("EntityStatusId");

                    b.ToTable("OnlineStores_Stores");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.StoreProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<int>("GlobalProductCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("GlobalProductCategoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("OnlineStores_StoreProductCategories");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.StoreSeller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStoreOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("OnlineStores_StoreSellers");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Payments.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn(10001);

                    b.Property<decimal>("Amount")
                        .HasColumnType("Decimal(19,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FailureMessage")
                        .HasMaxLength(3000)
                        .HasColumnType("Nvarchar(3000)");

                    b.Property<string>("GlobalCode")
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentFee")
                        .HasColumnType("Decimal(19,2)");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments_Payments");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Auth.AddressBook", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Auth.User", "User")
                        .WithMany("AddressBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("User");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Auth.User", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntityStatus");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.GlobalProductCategory", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Document", "BaseImage")
                        .WithMany()
                        .HasForeignKey("BaseImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.GlobalProductCategory", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Document", "ThumbnailImage")
                        .WithMany()
                        .HasForeignKey("ThumbnailImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BaseImage");

                    b.Navigation("EntityStatus");

                    b.Navigation("Parent");

                    b.Navigation("ThumbnailImage");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Manufacturer", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("EntityStatus");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Product", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Country", "CountryOfOrigin")
                        .WithMany()
                        .HasForeignKey("CountryOfOriginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.GlobalProductCategory", "LeafCategory")
                        .WithMany("Products")
                        .HasForeignKey("LeafCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CountryOfOrigin");

                    b.Navigation("EntityStatus");

                    b.Navigation("LeafCategory");

                    b.Navigation("Manufacturer");

                    b.Navigation("Store");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.ProductItem", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Product", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntityStatus");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.ProductItemDetail", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeValue", "EavAttributeValue")
                        .WithMany()
                        .HasForeignKey("EavAttributeValueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.ProductItem", "ProductItem")
                        .WithMany("ProductItemDetails")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EavAttributeValue");

                    b.Navigation("EntityStatus");

                    b.Navigation("ProductItem");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Supplier", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("EntityStatus");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Address", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Commune", "Commune")
                        .WithMany()
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Commune");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Commune", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.District", "District")
                        .WithMany("Communes")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.District", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Document", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.DocumentType", "DocumentType")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocumentType");

                    b.Navigation("EntityStatus");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntityType");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Province", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttribute", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.DataType", "DataType")
                        .WithMany()
                        .HasForeignKey("DataTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeGroup", "EavAttributeGroup")
                        .WithMany()
                        .HasForeignKey("EavAttributeGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeGroup", null)
                        .WithMany("EavAttributes")
                        .HasForeignKey("EavAttributeGroupId1");

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataType");

                    b.Navigation("EavAttributeGroup");

                    b.Navigation("EntityStatus");

                    b.Navigation("EntityType");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeEavAttributeSetMapping", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttribute", "EavAttribute")
                        .WithMany("EavAttributeEavAttributeSetMappings")
                        .HasForeignKey("EavAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeSet", "EavAttributeSet")
                        .WithMany("EavAttributeEavAttributeSetMappings")
                        .HasForeignKey("EavAttributeSetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EavAttribute");

                    b.Navigation("EavAttributeSet");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeValue", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttribute", "EavAttribute")
                        .WithMany("EavAttributeValues")
                        .HasForeignKey("EavAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EavAttribute");

                    b.Navigation("EntityStatus");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Logistics.ShippingTableRate", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Commune", "Commune")
                        .WithMany()
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.District", "District")
                        .WithMany()
                        .HasForeignKey("DistricId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Commune");

                    b.Navigation("District");

                    b.Navigation("EntityStatus");

                    b.Navigation("Province");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.Order", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Auth.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.Order", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BillingAddress");

                    b.Navigation("Buyer");

                    b.Navigation("EntityStatus");

                    b.Navigation("Parent");

                    b.Navigation("ShippingAddress");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.OrderItem", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.ProductItem", "ProductItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntityStatus");

                    b.Navigation("Order");

                    b.Navigation("ProductItem");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.ShoppingCart", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Auth.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.ShoppingCart", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Buyer");

                    b.Navigation("EntityStatus");

                    b.Navigation("Parent");

                    b.Navigation("ShippingAddress");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.ShoppingCartItem", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.ProductItem", "ProductItem")
                        .WithMany()
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.ShoppingCart", "ShoppingCart")
                        .WithMany("ShoppingCartItems")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntityStatus");

                    b.Navigation("ProductItem");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.Store", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("EntityStatus");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.StoreProductCategory", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.GlobalProductCategory", "GlobalProductCategory")
                        .WithMany()
                        .HasForeignKey("GlobalProductCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.Store", "Store")
                        .WithMany("StoreProductCategories")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntityStatus");

                    b.Navigation("GlobalProductCategory");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.StoreSeller", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.Store", "Store")
                        .WithMany("StoreSellers")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Auth.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntityStatus");

                    b.Navigation("Store");

                    b.Navigation("User");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Payments.Payment", b =>
                {
                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("EntityStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntityStatus");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Auth.User", b =>
                {
                    b.Navigation("AddressBooks");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.GlobalProductCategory", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.Product", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Catalog.ProductItem", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("ProductItemDetails");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Country", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.District", b =>
                {
                    b.Navigation("Communes");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.DocumentType", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Core.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttribute", b =>
                {
                    b.Navigation("EavAttributeEavAttributeSetMappings");

                    b.Navigation("EavAttributeValues");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeGroup", b =>
                {
                    b.Navigation("EavAttributes");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.Eav.EavAttributeSet", b =>
                {
                    b.Navigation("EavAttributeEavAttributeSetMappings");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.Order", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineOrders.ShoppingCart", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("ShoppingCartItems");
                });

            modelBuilder.Entity("svietnamAPI.Infras.Data.DatabaseContext.Entities.OnlineStores.Store", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("StoreProductCategories");

                    b.Navigation("StoreSellers");
                });
#pragma warning restore 612, 618
        }
    }
}
